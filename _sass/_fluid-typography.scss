// Fluid typography - responsive text sizing that scales smoothly between viewport sizes
// This creates more natural text scaling without hard breakpoints

// Base fluid calculation with simpler approach for Jekyll GitHub Pages
@function fluid-calc($min-size, $max-size, $min-width, $max-width) {
  @return calc(#{$min-size} + ((#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}px) / (#{$max-width} - #{$min-width}))));
}

// Fluid typography variables
$fluid-min-width: 320;  // 320px
$fluid-max-width: 1440; // 1440px

$fluid-xs-min: 0.75;    // 12px
$fluid-xs-max: 0.875;   // 14px

$fluid-sm-min: 0.875;   // 14px
$fluid-sm-max: 1;       // 16px

$fluid-base-min: 1;     // 16px
$fluid-base-max: 1.125; // 18px

$fluid-md-min: 1.125;   // 18px
$fluid-md-max: 1.25;    // 20px

$fluid-lg-min: 1.25;    // 20px
$fluid-lg-max: 1.5;     // 24px

$fluid-xl-min: 1.5;     // 24px
$fluid-xl-max: 1.875;   // 30px

$fluid-2xl-min: 1.875;  // 30px
$fluid-2xl-max: 2.25;   // 36px

$fluid-3xl-min: 2.25;   // 36px
$fluid-3xl-max: 3;      // 48px

$fluid-4xl-min: 3;      // 48px
$fluid-4xl-max: 3.75;   // 60px

$fluid-5xl-min: 3.75;   // 60px
$fluid-5xl-max: 4.5;    // 72px

$fluid-6xl-min: 4.5;    // 72px
$fluid-6xl-max: 6;      // 96px

// Fluid typography classes
.text-fluid {
  // Base text uses fluid sizing
  font-size: fluid-calc(#{$fluid-base-min}rem, #{$fluid-base-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.6;
}

// Heading fluid sizes
h1, .h1 {
  font-size: fluid-calc(#{$fluid-3xl-min}rem, #{$fluid-4xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.1;
  letter-spacing: -0.02em;
}

h2, .h2 {
  font-size: fluid-calc(#{$fluid-2xl-min}rem, #{$fluid-3xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.2;
  letter-spacing: -0.015em;
}

h3, .h3 {
  font-size: fluid-calc(#{$fluid-xl-min}rem, #{$fluid-2xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.3;
}

h4, .h4 {
  font-size: fluid-calc(#{$fluid-lg-min}rem, #{$fluid-xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.4;
}

h5, .h5 {
  font-size: fluid-calc(#{$fluid-md-min}rem, #{$fluid-lg-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.4;
}

h6, .h6 {
  font-size: fluid-calc(#{$fluid-sm-min}rem, #{$fluid-md-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.5;
}

.display-1 {
  font-size: fluid-calc(#{$fluid-5xl-min}rem, #{$fluid-6xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1;
  letter-spacing: -0.03em;
  font-weight: 800;
}

.display-2 {
  font-size: fluid-calc(#{$fluid-4xl-min}rem, #{$fluid-5xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1;
  letter-spacing: -0.03em;
  font-weight: 800;
}

.display-3 {
  font-size: fluid-calc(#{$fluid-3xl-min}rem, #{$fluid-4xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.1;
  letter-spacing: -0.025em;
  font-weight: 800;
}

.display-4 {
  font-size: fluid-calc(#{$fluid-2xl-min}rem, #{$fluid-3xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.1;
  letter-spacing: -0.025em;
  font-weight: 700;
}

.display-5 {
  font-size: fluid-calc(#{$fluid-xl-min}rem, #{$fluid-2xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.2;
  letter-spacing: -0.02em;
  font-weight: 700;
}

.display-6 {
  font-size: fluid-calc(#{$fluid-lg-min}rem, #{$fluid-xl-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.2;
  letter-spacing: -0.02em;
  font-weight: 700;
}

// Text utilities
.lead {
  font-size: fluid-calc(#{$fluid-md-min}rem, #{$fluid-lg-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.6;
  font-weight: 400;
}

.small {
  font-size: fluid-calc(#{$fluid-xs-min}rem, #{$fluid-sm-max}rem, $fluid-min-width, $fluid-max-width);
  line-height: 1.5;
}

// Text animations
.text-animated {
  opacity: 0;
  animation: textFadeIn 1s forwards;
  
  @for $i from 1 through 10 {
    &:nth-child(#{$i}) {
      animation-delay: #{$i * 0.1}s;
    }
  }
}

@keyframes textFadeIn {
  from { 
    opacity: 0; 
    transform: translateY(20px);
  }
  to { 
    opacity: 1; 
    transform: translateY(0);
  }
}

// Character by character animation
.text-reveal {
  display: inline-block;
  white-space: pre;
  overflow: hidden;
  
  &__content {
    display: inline-block;
    opacity: 0;
    transform: translateY(2em);
    animation: textReveal 0.5s cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
    
    @for $i from 1 through 50 {
      &:nth-child(#{$i}) {
        animation-delay: #{$i * 0.03}s;
      }
    }
  }
}

@keyframes textReveal {
  from {
    opacity: 0;
    transform: translateY(1em);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Gradient text with animation
.gradient-text {
  background-image: linear-gradient(to right, $indigo-400, $purple-400, $cyan-400);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  background-size: 200% auto;
  animation: gradientText 4s ease infinite;
}

@keyframes gradientText {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

// Text shimmer effect
.text-shimmer {
  background-image: linear-gradient(
    90deg, 
    $indigo-400 0%, 
    $purple-400 33%,
    $cyan-400 66%, 
    $indigo-400 100%
  );
  background-size: 300% auto;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: textShimmer 6s linear infinite;
}

@keyframes textShimmer {
  to { background-position: 300% center; }
}

// Blinking cursor effect
.text-cursor {
  border-right: 3px solid $indigo-400;
  animation: blink 1s step-end infinite;
  white-space: nowrap;
  display: inline-block;
}

@keyframes blink {
  from, to { border-color: transparent; }
  50% { border-color: $indigo-400; }
}

// Highlight text with underline
.text-highlight {
  display: inline;
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 0.3em;
    background-color: rgba($indigo-400, 0.3);
    z-index: -1;
    transform-origin: bottom left;
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }
  
  &:hover::after {
    transform: scaleX(1);
  }
}